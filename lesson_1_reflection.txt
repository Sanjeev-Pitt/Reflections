How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    it was easy to compare, so I was able to find the difference

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    From history, I can easily see when Ive done changes and what changes I've done so if I messed up anything in future, I can back to older version and compare the two files and can easily detect my changes and rectify the mistakes, which'll save lot of my time.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Prons: It's good to do commit when you've done a meanningful changes and comitting with messages also allows you to remember your changes, while automatically saving version controls does not have meaning and going back to a particular control, is very hard when you don't remember what you have done at particular time of control

    Cons: Sometimes we may forget to save manually

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Saving multi files at one go is cool!! now I can track changes in each interrelated file and need not to worry to check them separately, whihc might be a pain.

How can you use the commands git log and git diff to view the history of files?

    git log and git diff are great tools and I can easily trace back to any commit and recognise it with my message and can eassily see what changes I've done in that file.

How might using version control make you more confident to make changes that
could break something?

    I can go back anytime and check which commit has caused the bug..as simple as that and I can also run that previous version...amazing

Now that you have your workspace set up, what do you want to try using Git for?

    I'll use it for my project
